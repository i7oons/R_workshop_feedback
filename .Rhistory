library(gtsummary)
library(flextable)
# Set working directory
here::set_here("/Users/cheng/OneDrive - ird.global/Desktop/R Projects/R Workshop Feedback/R_workshop_feedback")
# Load data
url <- "https://docs.google.com/spreadsheets/d/12jxEV9rqIOrIw70lVXfSegorv25owciTMS-hjSotioo/edit?resourcekey#gid=1120526525"
dat <- read_sheet(url)
url2 <- "https://docs.google.com/spreadsheets/d/1ZMLHBtBn83r69u0IHmtAyjJ_QU8XV9uevYIuomj8x1g/edit#gid=146447740"
respondents <- dat |>
rename(email = 2) |>
mutate(use_ird_email = str_detect(email, "ird\\.global"))
registrants <- read_sheet(url2) |>
rename(email = 2,
gender = 6,
country = 7,
type = 10,
org = 11,
SSRG = 16
) |>
filter(row_number() == n(), .by = email) |> # Take the last record if duplicated
select(email, gender, country, type, org, SSRG) |>
mutate(email = recode(email, 'lapeonalaja@gmail.com' = 'lape.onalaja@ird.global', 'israr.ahmad.hri@nih.org.pk' = 'israrpmrc@gmail.com',
'Mondar.Ahmed@ird.global' = 'mondar.ahmed@ird.global', 'Maryam.younus@ird.global' = 'maryam.younus@ird.global',
'aftab.khan.hri@nih.org.pk' = 'aftabropmrc@gmail.com',
'mohsin.h.alvi@pill.org.pk' = 'mohsinhassanalvi@gmail.com')) |>
mutate(country = recode(country, 'Karachi' = 'Pakistan'))
# merge details from registrant list to respondents
combi <- respondents |>
left_join(registrants)
# flattened feedback of respondents and rename columns
feedbacks <- combi |>
group_by(email) |>
summarise_all(~paste(ifelse(is.na(.), "", .), collapse = "|")) |>
rename("Organisation - What was done well" = 7,
"Organisation - Suggestions to improve" = 8,
"Intro to R - What was done well" = 11,
"Intro to R - Suggestions to improve" = 12,
"Data Viz - What was done well" = 15,
"Data Viz - Suggestions to improve" = 16,
"Data Wrangling - What was done well" = 19,
"Data Wrangling - Suggestions to improve" = 20,
"Descriptive Analysis - What was done well" = 23,
"Descriptive Analysis - Suggestions to improve" = 24,
"Intro to Quarto - What was done well" = 27,
"Intro to Quarto - Suggestions to improve" = 28,
"Report generation - What was done well" = 31,
"Report generation - Suggestions to improve" = 32,
"General comments or suggestions" = 33
) |>
select(1,7,8,11,12,15,16,19,20,23,24,27,28,31,32,33)
# Summary table for registrants
registrants_details <- registrants |>
filter(row_number() == n(), .by = email) |>
select(2 : 6) |>
tbl_summary()
# Summary table for respondents
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
tbl_summary()
#Splitting the feedback by sections
feedback_org <- feedbacks |>
select(starts_with("Organisation")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on pre-workshop Organisation")
feedback_intro <- feedbacks |>
select(starts_with("Intro to R")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Intro to R")
feedback_viz <- feedbacks |>
select(starts_with("Data Viz")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Data Viz")
feedback_wrang <- feedbacks |>
select(starts_with("Data Wrangling")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Data Wrangling")
feedback_descr <- feedbacks |>
select(starts_with("Descriptive")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Descriptive Analysis")
feedback_quarto <- feedbacks |>
select(starts_with("Intro to Quarto")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Intro to Quarto")
feedback_report <- feedbacks |>
select(starts_with("Report generation"))|>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Report generation")
feedback_general <- feedbacks |>
select(starts_with("General")) |>
rename("Remarks" = 1) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "General comments or suggestions")
# Summary table for registrants
registrants_details <- registrants |>
filter(row_number() == n(), .by = email) |>
select(2 : 6) |>
tbl_summary()
# Summary table for respondents
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
mutate(
gender = setLabels(gender, "Gender"),
country = setLabels(country, "Country"),
type = setLabels(type, "Type"),
org = setLabels(org, "Organization"),
SSRG = setLabels(SSRG, "Part of SSRG")
)|>
tbl_summary()
# Summary table for respondents
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
mutate(
gender = setLabels(gender, "Gender"),
country = setLabels(country, "Country"),
type = setLabels(type, "Type"),
org = setLabels(org, "Organization"),
SSRG = setLabels(SSRG, "Part of SSRG")
)|>
tbl_summary()
respondents_details
combi
View(combi)
View(registrants)
View(respondents)
respondents_details
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39)
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39)
#| echo: false
#| message : false
# Plots for Likert chart
# Load package
library(tidyverse)
library(googlesheets4)
# Set working directory
here::set_here("/Users/cheng/OneDrive - ird.global/Desktop/R Projects/R Workshop Feedback/R_workshop_feedback")
# Load data
url <- "https://docs.google.com/spreadsheets/d/12jxEV9rqIOrIw70lVXfSegorv25owciTMS-hjSotioo/edit?resourcekey#gid=1120526525"
dat <- read_sheet(url)
dat1 <- dat |>
rename(email = 2) |>
filter(row_number() == n(), .by = email) |> # Take the last record if duplicated
select(-Timestamp)
respondents_count <- nrow(dat1)
#load data for pre-workshop organisation
pre_wksp <- dat1 |>
select(email, matches("1.[1-4]")) |>
pivot_longer(-email,
names_to = "qns",
values_to = "rating") |>
mutate(
qns = str_sub(qns, 3, 3) |> as.numeric(), # 3 is the index position of the str_sub for qns
qns = case_when(
qns == 1 ~ "It was easy to register for the workshop",
qns == 2 ~ "Communications for the workshop were clear",
qns == 3 ~ "Communications for the workshop were timely",
qns == 4 ~ "Instructions for workshop preparation were clear",
.default = "Unknown"
),
qns = factor(qns,
levels = c("It was easy to register for the workshop","Communications for the workshop were clear",
"Communications for the workshop were timely","Instructions for workshop preparation were clear")),
rating = case_when(
rating == 1 ~ "Strongly disagree",
rating == 2 ~ "Disagree",
rating == 3 ~ "Neutral",
rating == 4 ~ "Agree",
rating == 5 ~ "Strongly agree",
.default = "Unknown"
),
rating = factor(rating,
levels = c("Strongly disagree", "Disagree", "Neutral",
"Agree", "Strongly agree"))
)
pre_wksp_1 <- pre_wksp |>
count(qns, rating) |>
mutate(prop = n/sum(n),
.by = qns)
# load data for Facilitator explanation
explain <- dat1 |>
select(email, matches("^[2-7]\\.1")) |>
pivot_longer(-email,
names_to = "topic",
values_to = "rating") |>
mutate(
topic = str_sub(topic, 1, 1) |> as.numeric(),
topic = case_when(
topic == 2 ~ "Intro to R",
topic == 3 ~ "Data Viz",
topic == 4 ~ "Data Wrangling",
topic == 5 ~ "Descriptive Analysis",
topic == 6 ~ "Intro to Quarto",
topic == 7 ~ "Report generation",
.default = "Unknown"
),
topic = factor(topic,
levels = c("Intro to R", "Data Viz", "Data Wrangling",
"Descriptive Analysis", "Intro to Quarto",
"Report generation")),
rating = case_when(
rating == 1 ~ "Strongly disagree",
rating == 2 ~ "Disagree",
rating == 3 ~ "Neutral",
rating == 4 ~ "Agree",
rating == 5 ~ "Strongly agree",
.default = "Unknown"
),
rating = factor(rating,
levels = c("Strongly disagree", "Disagree", "Neutral",
"Agree", "Strongly agree")),
qns = "The facilitator's explanation was easy to follow"
)
explain_1 <- explain |>
count(topic, rating, qns) |>
mutate(prop = n/sum(n),
.by = topic)
# load data for materials
materials <- dat1 |>
select(email, matches("^[2-7]\\.2")) |>
pivot_longer(-email,
names_to = "topic",
values_to = "rating") |>
mutate(
topic = str_sub(topic, 1, 1) |> as.numeric(),
topic = case_when(
topic == 2 ~ "Intro to R",
topic == 3 ~ "Data Viz",
topic == 4 ~ "Data Wrangling",
topic == 5 ~ "Descriptive Analysis",
topic == 6 ~ "Intro to Quarto",
topic == 7 ~ "Report generation",
.default = "Unknown"
),
topic = factor(topic,
levels = c("Intro to R", "Data Viz", "Data Wrangling",
"Descriptive Analysis", "Intro to Quarto",
"Report generation")),
rating = case_when(
rating == 1 ~ "Strongly disagree",
rating == 2 ~ "Disagree",
rating == 3 ~ "Neutral",
rating == 4 ~ "Agree",
rating == 5 ~ "Strongly agree",
.default = "Unknown"
),
rating = factor(rating,
levels = c("Strongly disagree", "Disagree", "Neutral",
"Agree", "Strongly agree")),
qns = "The training materials clear and adequate"
)
materials_1 <- materials |>
count(topic, rating, qns) |>
mutate(prop = n/sum(n),
.by = topic)
p_pre_wksp <-  ggplot(pre_wksp_1, aes(x = prop, y = fct_rev(qns), fill = fct_rev(rating))) +
geom_col(alpha = 0.8, show.legend = TRUE) +
labs(x = "", y = "", fill = "",
title = "Pre-workshop Organisation") +
scale_fill_manual(values = c("#236EC3", "#78AFE6", "#E1E1E1", "#E6AAA0", "#C32314")) +
guides(fill = guide_legend(reverse = TRUE)) + # reverse legend order
scale_x_continuous(labels = scales::label_percent()) +
theme_minimal() +
theme(
legend.position = "bottom",
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
p_explain <- ggplot(explain_1, aes(x = prop, y = fct_rev(topic), fill = fct_rev(rating))) +
geom_col(alpha = 0.8) +
labs(x = "", y = "", fill = "",
title = "The facilitator's explanation was easy to follow") +
scale_fill_manual(values = c("#236EC3", "#78AFE6", "#E1E1E1", "#E6AAA0", "#C32314")) +
guides(fill = guide_legend(reverse = TRUE)) + # reverse legend order
scale_x_continuous(labels = scales::label_percent()) +
theme_minimal() +
theme(
legend.position = "bottom",
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
p_materials <- ggplot(materials_1, aes(x = prop, y = fct_rev(topic), fill = fct_rev(rating))) +
geom_col(alpha = 0.8) +
labs(x = "", y = "", fill = "",
title = "The training materials clear and adequate") +
scale_fill_manual(values = c("#236EC3", "#78AFE6", "#E1E1E1", "#E6AAA0", "#C32314")) +
guides(fill = guide_legend(reverse = TRUE)) + # reverse legend order
scale_x_continuous(labels = scales::label_percent()) +
theme_minimal() +
theme(
legend.position = "bottom",
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
#| echo: false
#| message : false
# Analysis on feedback and respondents
# Load package
library(tidyverse)
library(googlesheets4)
library(stringr)
library(gtsummary)
library(flextable)
# Set working directory
here::set_here("/Users/cheng/OneDrive - ird.global/Desktop/R Projects/R Workshop Feedback/R_workshop_feedback")
# Load data
url <- "https://docs.google.com/spreadsheets/d/12jxEV9rqIOrIw70lVXfSegorv25owciTMS-hjSotioo/edit?resourcekey#gid=1120526525"
dat <- read_sheet(url)
url2 <- "https://docs.google.com/spreadsheets/d/1ZMLHBtBn83r69u0IHmtAyjJ_QU8XV9uevYIuomj8x1g/edit#gid=146447740"
respondents <- dat |>
rename(email = 2) |>
mutate(use_ird_email = str_detect(email, "ird\\.global"))
registrants <- read_sheet(url2) |>
rename(email = 2,
gender = 6,
country = 7,
type = 10,
org = 11,
SSRG = 16
) |>
filter(row_number() == n(), .by = email) |> # Take the last record if duplicated
select(email, gender, country, type, org, SSRG) |>
mutate(email = recode(email, 'lapeonalaja@gmail.com' = 'lape.onalaja@ird.global', 'israr.ahmad.hri@nih.org.pk' = 'israrpmrc@gmail.com',
'Mondar.Ahmed@ird.global' = 'mondar.ahmed@ird.global', 'Maryam.younus@ird.global' = 'maryam.younus@ird.global',
'aftab.khan.hri@nih.org.pk' = 'aftabropmrc@gmail.com', 'minhal.hyder@ird.golbal' = 'minhal.hyder@ird.global',
'mohsin.h.alvi@pill.org.pk' = 'mohsinhassanalvi@gmail.com')) |>
mutate(country = recode(country, 'Karachi' = 'Pakistan'))
# merge details from registrant list to respondents
combi <- respondents |>
left_join(registrants)
# flattened feedback of respondents and rename columns
feedbacks <- combi |>
group_by(email) |>
summarise_all(~paste(ifelse(is.na(.), "", .), collapse = "|")) |>
rename("Organisation - What was done well" = 7,
"Organisation - Suggestions to improve" = 8,
"Intro to R - What was done well" = 11,
"Intro to R - Suggestions to improve" = 12,
"Data Viz - What was done well" = 15,
"Data Viz - Suggestions to improve" = 16,
"Data Wrangling - What was done well" = 19,
"Data Wrangling - Suggestions to improve" = 20,
"Descriptive Analysis - What was done well" = 23,
"Descriptive Analysis - Suggestions to improve" = 24,
"Intro to Quarto - What was done well" = 27,
"Intro to Quarto - Suggestions to improve" = 28,
"Report generation - What was done well" = 31,
"Report generation - Suggestions to improve" = 32,
"General comments or suggestions" = 33
) |>
select(1,7,8,11,12,15,16,19,20,23,24,27,28,31,32,33)
# Summary table for registrants
registrants_details <- registrants |>
filter(row_number() == n(), .by = email) |>
select(2 : 6) |>
tbl_summary()
# Summary table for respondents
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
tbl_summary()
#Splitting the feedback by sections
feedback_org <- feedbacks |>
select(starts_with("Organisation")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on pre-workshop Organisation")
feedback_intro <- feedbacks |>
select(starts_with("Intro to R")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Intro to R")
feedback_viz <- feedbacks |>
select(starts_with("Data Viz")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Data Viz")
feedback_wrang <- feedbacks |>
select(starts_with("Data Wrangling")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Data Wrangling")
feedback_descr <- feedbacks |>
select(starts_with("Descriptive")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Descriptive Analysis")
feedback_quarto <- feedbacks |>
select(starts_with("Intro to Quarto")) |>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Intro to Quarto")
feedback_report <- feedbacks |>
select(starts_with("Report generation"))|>
rename("What was done well" = 1,
"Suggestions to improve" = 2) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "Feedback on Report generation")
feedback_general <- feedbacks |>
select(starts_with("General")) |>
rename("Remarks" = 1) |>
flextable() |>
set_table_properties(layout = "autofit") |>
set_caption(caption = "General comments or suggestions")
# Summary table for registrants
registrants_details <- registrants |>
filter(row_number() == n(), .by = email) |>
select(2 : 6) |>
tbl_summary()
# Summary table for respondents
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
mutate(
gender = setLabels(gender, "Gender"),
country = setLabels(country, "Country"),
type = setLabels(type, "Type"),
org = setLabels(org, "Organization"),
SSRG = setLabels(SSRG, "Part of SSRG")
)|>
tbl_summary()
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39)
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
mutate(
country = setLabels(country, "Country"),
type = setLabels(type, "Type"),
org = setLabels(org, "Organization"),
SSRG = setLabels(SSRG, "Part of SSRG")
)|>
tbl_summary()
library(collapse)
respondents_details <- combi |>
filter(row_number() == n(), .by = email) |>
select(35 : 39) |>
mutate(
gender = setLabels(gender, "Gender"),
country = setLabels(country, "Country"),
type = setLabels(type, "Type"),
org = setLabels(org, "Organization"),
SSRG = setLabels(SSRG, "Part of SSRG")
)|>
tbl_summary()
respondents_details
dat1
dat <- read_sheet(url)
dat1 <- dat |>
rename(email = 2) |>
filter(row_number() == n(), .by = email) |> # Take the last record if duplicated
select(-Timestamp)
nrow(dat1)
ggplotly()
library(plotly)
p_pre_wksp <-  ggplot(pre_wksp_1, aes(x = prop, y = fct_rev(qns), fill = fct_rev(rating))) +
geom_col(alpha = 0.8, show.legend = TRUE) +
labs(x = "", y = "", fill = "",
title = "Pre-workshop Organisation") +
scale_fill_manual(values = c("#236EC3", "#78AFE6", "#E1E1E1", "#E6AAA0", "#C32314")) +
guides(fill = guide_legend(reverse = TRUE)) + # reverse legend order
scale_x_continuous(labels = scales::label_percent()) +
theme_minimal() +
theme(
legend.position = "bottom",
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
p_pre_wksp
ggplotly()
